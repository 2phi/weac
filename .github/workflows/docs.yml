name: Build and publish Sphinx ðŸª¬ documentation

on:
  push:
    branches:
      - main
    paths:
      - 'weac/**'
      - 'docs/sphinx/**'
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build and publish Sphinx ðŸª¬ documentation
    runs-on: ubuntu-latest
    environment: docs-deploy

    steps:
    - name: Check out the repository
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install sphinx sphinxawesome_theme IPython
        pip install -e .

    - name: Build documentation
      run: |
        # Generate API docs
        sphinx-apidoc -o docs/sphinx/ weac --force --separate

        # Build HTML docs (do not fail on warnings)
        make -C docs/sphinx clean html SPHINXOPTS="--keep-going -n"

    - name: Deploy documentation
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        set -euo pipefail
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # Prepare a clean worktree for the documentation branch
        git worktree remove -f docs-deploy || true
        git worktree prune
        # Ensure we know about the remote branch if it exists
        git fetch origin documentation || true
        if git show-ref --verify --quiet refs/remotes/origin/documentation; then
          # Attach worktree to the remote branch tip and create/point local branch 'documentation'
          git worktree add --force -B documentation docs-deploy origin/documentation
        else
          # Create a new local 'documentation' branch starting from current HEAD (content will be replaced)
          git worktree add --force -b documentation docs-deploy HEAD
        fi
        # Copy built HTML to the worktree root
        rsync -av --delete --exclude '.git' --exclude '.gitignore' --exclude 'CNAME' --exclude '.gitattributes' docs/sphinx/_build/html/ docs-deploy/
        touch docs-deploy/.nojekyll
        # Commit and push
        pushd docs-deploy
        pushd docs-deploy
        git add -A
        if git diff --cached --quiet; then
          echo "No changes to publish"
          exit 0
        else
          git commit -m "Update documentation"
          git fetch origin documentation --quiet || true
          git push --force-with-lease origin HEAD:documentation
        fi
        popd